apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: {{ fine_tuning_evaluate_model_name }}
  namespace: {{ fine_tuning_evaluate_model_namespace }}
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: Never
      template:
        spec:
          containers:
          - name: pytorch
            image: {{ fine_tuning_evaluate_model_container_image }}
            imagePullPolicy: IfNotPresent
            command: [bash, "/mnt/entrypoint/{{ fine_tuning_job_entrypoint_name }}"]
            env:
            - name: SFT_TRAINER_CONFIG_JSON_PATH
              value: /mnt/config/config.json
            - name: MODEL_PATH
              value: "/mnt/storage/model/{{ fine_tuning_evaluate_model_model_name }}
            - name: DATASET_SOURCE
              value: "/mnt/storage/dataset/{{ fine_tuning_evaluate_model_dataset_name }}"
            - name: DATASET_DEST
              value: "/mnt/output/dataset.json"
            - name: DATASET_REPLICATION
              value: "{{ fine_tuning_evaluate_model_dataset_replication }}"
{% if fine_tuning_evaluate_model_dataset_transform %}
            - name: DATASET_TRANSFORM
              value: "/mnt/entrypoint/{{ fine_tuning_evaluate_model_dataset_transform }}"
{% endif %}
{% if fine_tuning_evaluate_model_gpu %}
            - name: NUM_GPUS
              value: "{{ fine_tuning_evaluate_model_gpu }}"
{% endif %}
            volumeMounts:
            - name: storage-volume
              mountPath: /mnt/storage
            - name: entrypoint-volume
              mountPath: /mnt/entrypoint
            - name: config-volume
              mountPath: /mnt/config
            - name: output-volume
              mountPath: /mnt/output
            resources:
              requests: &request_block
{% if fine_tuning_evaluate_model_gpu %}
                nvidia.com/gpu: "{{ fine_tuning_evaluate_model_gpu }}"
{% endif %}
                memory: "{{ fine_tuning_evaluate_model_memory }}Gi"
                cpu: "{{ fine_tuning_evaluate_model_cpu }}"
                #ephemeral-storage: 100Gi
{% if fine_tuning_evaluate_model_request_equals_limits %}
              limits: *request_block
{% elif fine_tuning_evaluate_model_gpu %}
              limits:
                nvidia.com/gpu: "{{ fine_tuning_evaluate_model_gpu }}"
{% endif %}

          volumes:
          - name: storage-volume
            persistentVolumeClaim:
              claimName: {{ fine_tuning_evaluate_model_pvc_name }}
          - name: config-volume
            configMap:
              name: {{ fine_tuning_evaluate_model_name }}-config
          - name: entrypoint-volume
            configMap:
              name: {{ fine_tuning_evaluate_model_name }}-entrypoint
          - name: output-volume
            emptyDir: {}
